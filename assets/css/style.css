:root {
  /* declare a variable with `--` syntax */
  --background: #333940;
  --bodytext: #e867ed;
  --bordercolor: #e0eae5;
  --codetext: #fff;
}
html {
  /* Standarizing font size to 10 px */
  font-size: 62.5%;
}

body {
  /*Font family for best font on each OS*/
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';

  /* set body font size to 1.75rem, which is 1.75x more than the font-size of 10px, making it 17.5px  */
  font-size: 1.75rem;
  line-height: 1.5;
  color: var(--bodytext);
  background-color: var(--background);
}
  

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 0.625rem;
  color: var(--bodytext);
  font-weight: 700;
  line-height: 1.1;
}

h1 {
  /* 4rem = 40px (4 * 10px) */
  font-size: 4rem;
}

h2 {
  font-size: 3.5rem;
}

h3 {
  font-size: 3rem;
}

h4 {
  font-size: 2.5rem;
}

h5 {
  font-size: 2rem;
}

h6 {
  font-size: 1.5rem;
}

header {
  margin: 2rem 1rem 5rem 1rem;
  justify-content: center;
  text-align: center;
  font-size: small;
  background-color: var(--background);
}

header h1 {
  color: var(--bodytext);
  font-size: xx-large;
  margin-bottom: 2rem;
}

header p {
  margin: 0rem 4rem 0rem 4rem;
  color: var(--codetext);
}
 main {
   margin: 1rem;
 }
code {
  /* Monospace font stack is used for our code blocks to make it look more like code */
  font-family: Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console',
    'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono',
    'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier,
    monospace;

}

/* create our main grid with flexbox, use negative margins to offset the padding on the .card-column class */
.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: -1.5rem;
  margin-right: -1.5rem;
  background-color: var(--background);
}

footer {
  width: 100%;
  bottom: 0;
  padding: 2rem;
  text-align: center;
  background: var(--background);
  color: var(--Glowpink);
  margin-top: auto;
}

/* using a mobile-first approach, set base column width to be 100% and we'll update it using media queries for larger screen sizes */

.card-column {
  flex: 1 0 100%;
  padding: 1.5rem;
  /* when the screen resizes, make it so our columns don't jump in size */
  transition: flex-basis 500ms linear;
  margin-bottom: 1.5rem;
}

.justify-center {
  justify-content: center;
}

.card {
  display:flex;
  min-width: 30rem;
  border-style: dashed;
  border-width: .2rem;
  border-color: var(--bordercolor);
  padding: 1rem;
  flex: 0 0 25rem;
  margin-bottom: 2rem;
  flex-direction: column;
  justify-content: flex-start;
  min-height: 100%;
  /* outline is like border, but on the outside of the box instead of inside */
  outline: 2px dashed var(--gin);
  outline-offset: -2px;
  transition: all 0.5s ease-in-out;
}

.header {
  position: relative;
  margin-top: -3rem;
  border-radius: 1rem;
  border: .02rem solid var(--bordercolor);
  padding: .005rem;
  z-index: 2;
  background-color: var(--background);
}
.card p {
  color: var(--glowpink);
  text-align: justify;
  margin: .1rem;
}

.card code {
  /* padding: 2rem;
  text-align: justify; */
  -moz-user-select: all;
  -webkit-user-select: all;
  -ms-user-select: all;
  user-select: all;
   
}
 /* set styles to make it so code wraps in <pre> instead of overflowing */
  /* Make each code block the height of the highest block on the page making them all equal */
  /* Linear Gradient Background */
.card .code-block {
  color: var(--codetext);
  white-space: pre-wrap;
  overflow: auto;
  tab-size: 4;
  padding: 1.2rem 1rem;
  align-items: center;
  display: flex;
  flex-grow: 1;
  background-image: linear-gradient(
    rgba(232, 102, 236, 0.3) 0%,
    rgba(232, 102, 236, 0.6) 100%
  );
  min-height: 100%;
}

footer {
  color: var(--glowpink);
}
footer span {
  color: red;
}

/* using a mobile-first approach, use `min-width` values going from narrow -> wide for a responsive design */
@media screen and (min-width: 768px) {
  /* on tablets, set columns to only be 50% of the width and not grow */
  .card-column {
    flex: 0 0 50%;
    max-width: 50%;
  }

  /* select the last child to grow to full width if it has space to grow */
  .card-column:last-child {
    flex-grow: 1;
  }
}

/* media query for larger screens */
@media screen and (min-width: 992px) {
  header {
    width: 100%;
  }

  .card-column {
    flex: 0 0 33.333%;
    max-width: 33.333%;
  }
}
